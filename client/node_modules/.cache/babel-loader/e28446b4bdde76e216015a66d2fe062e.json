{"ast":null,"code":"var _jsxFileName = \"D:\\\\shoppingManagement\\\\client\\\\src\\\\components\\\\MyCart\\\\MyCart.js\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCart, removeCartItem, updateCartItem } from \"../../actions/cart\";\nimport { Button, Typography } from \"@material-ui/core\";\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const user = useMemo(() => JSON.parse(localStorage.getItem(\"profile\")), []);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    if (user) {\n      var _user$result;\n      dispatch(getCart(user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id));\n    }\n  }, [dispatch, user]);\n  const handleRemove = productId => {\n    var _user$result2;\n    dispatch(removeCartItem(user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id, productId));\n  };\n  const handleUpdateQuantity = (productId, quantity) => {\n    var _user$result3;\n    dispatch(updateCartItem(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id, productId, quantity));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Your Cart\"), cart.products.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.product._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, item.product.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Quantity: \", item.quantity), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleUpdateQuantity(item.product._id, item.quantity + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleUpdateQuantity(item.product._id, item.quantity - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleRemove(item.product._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Remove\"))));\n};\nexport default Cart;","map":{"version":3,"names":["React","useEffect","useMemo","useDispatch","useSelector","getCart","removeCartItem","updateCartItem","Button","Typography","Cart","dispatch","user","JSON","parse","localStorage","getItem","cart","state","_user$result","result","_id","handleRemove","productId","_user$result2","handleUpdateQuantity","quantity","_user$result3","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","products","map","item","key","product","title","onClick"],"sources":["D:/shoppingManagement/client/src/components/MyCart/MyCart.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCart, removeCartItem, updateCartItem } from \"../../actions/cart\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useMemo(() => JSON.parse(localStorage.getItem(\"profile\")), []);\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getCart(user?.result?._id));\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  const handleRemove = (productId) => {\r\n    dispatch(removeCartItem(user?.result?._id, productId));\r\n  };\r\n\r\n  const handleUpdateQuantity = (productId, quantity) => {\r\n    dispatch(updateCartItem(user?.result?._id, productId, quantity));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\">Your Cart</Typography>\r\n      {cart.products.map((item) => (\r\n        <div key={item.product._id}>\r\n          <Typography variant=\"h6\">{item.product.title}</Typography>\r\n          <Typography variant=\"body2\">Quantity: {item.quantity}</Typography>\r\n          <Button\r\n            onClick={() =>\r\n              handleUpdateQuantity(item.product._id, item.quantity + 1)\r\n            }\r\n          >\r\n            +\r\n          </Button>\r\n          <Button\r\n            onClick={() =>\r\n              handleUpdateQuantity(item.product._id, item.quantity - 1)\r\n            }\r\n          >\r\n            -\r\n          </Button>\r\n          <Button onClick={() => handleRemove(item.product._id)}>Remove</Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}